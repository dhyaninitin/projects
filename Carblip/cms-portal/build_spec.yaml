version: 0.1
component: build
timeoutInSeconds: 10000
shell: bash
failImmediatelyOnError: true

steps:
  - type: Command
    name: "Install NodeJS"
    timeoutInSeconds: 650
    failImmediatelyOnError: true
    command: |
      cd ${OCI_WORKSPACE_DIR}/${OCI_PRIMARY_SOURCE_NAME}
      # install nvm
      curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash
      export NVM_DIR="$HOME/.nvm"
      [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
      nvm install 16
      echo "NODE VERSION: $(node -v)"
      echo "NPM VERSION: $(npm -v)"
    onFailure:
      - type: Command
        command: |
          echo "Handling Failure"
          echo "Failure successfully handled"
        timeoutInSeconds: 40
        runAs: root

  - type: Command
    name: "Install Dependencies"
    timeoutInSeconds: 650
    failImmediatelyOnError: true
    command: |
      echo "Install Dependencies NODE VERSION: $(node -v)"
      npm install -g @angular/cli@16.2.10
      rm package-lock.json
      npm config set legacy-peer-deps true
      npm install
    onFailure:
      - type: Command
        command: |
          echo "Install Dependencies Failed..."
        timeoutInSeconds: 40
        runAs: root

  - type: Command
    name: "Build App"
    timeoutInSeconds: 650
    failImmediatelyOnError: true
    command: |
      echo Build started on `date`
      ng build --configuration=$BUILD_ENV
      echo copy assets to dist
      cp server.js ./dist
      cp bootstrap.js ./dist
      cp package-server.json ./dist/package.json
      npm --prefix ./dist install
      zip -rq portal-app.zip ./dist
    onFailure:
      - type: Command
        command: |
          echo "Build App Failed..."
        timeoutInSeconds: 40
        runAs: root

outputArtifacts:
  - name: portal-app
    type: BINARY
    location: ./portal-app.zip
